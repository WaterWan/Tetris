package water.eluosifangkuai.ui;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;

import javax.swing.ImageIcon;

public class LayerPoint extends Layer {
	
	/*
	 * 分数最大位数
	 */
	private static final int POINT_BIT = 5;
	
	/*
	 * 窗口标题(分数)
	 */
	private static final Image IMG_POINT=new ImageIcon("graphics/string/point.png").getImage();
	

	
	/*
	 * 窗口标题(消行)
	 */
	private static final Image IMG_RMLINE=new ImageIcon("graphics/string/rmline.png").getImage();
	
	//TODO
	private static final int LEVEL_UP = 20;

	/*
	 * 消行y坐标
	 */
	private final int rmLineY;

	/*
	 * 分数y坐标
	 */
	private final int pointY;
	
	/*
	 * 经验值y坐标
	 */
	private final int expY;
	
	/*
	 * 经验值槽的宽度
	 */
	private final int expW;

	/*
	 * 消行x坐标
	 */
	private final int comX;
	
	public LayerPoint(int x, int y,int w,int h){
		super(x, y, w, h);
		// 初始化共通X坐标
		this.comX = this.w - IMG_NUMBER_W * POINT_BIT - PANDDING;
		// 初始化分数显示的Y坐标
		this.pointY = PANDDING;
		// 初始化消行显示的Y坐标
		this.rmLineY = this.pointY + IMG_POINT.getHeight(null) + PANDDING;
		// 初始化经验值显示的Y坐标
		this.expY = this.rmLineY + IMG_RMLINE.getHeight(null) + PANDDING;
		//初始化经验值槽的宽度
		this.expW = this.w - (PANDDING << 1);
	}

	public void paint(Graphics g) {
		this.createWindow(g);
		// 绘制标题(分数)
		g.drawImage(IMG_POINT, this.x + PANDDING, this.y + pointY, null);
		//显示分数
		this.drawNumberLeftPad(comX, pointY, this.dto.getNowPoint(), POINT_BIT, g);
		// 绘制标题(消行)
		g.drawImage(IMG_RMLINE, this.x + PANDDING, this.y + rmLineY, null);
		//显示消行
		this.drawNumberLeftPad(comX, rmLineY, this.dto.getNowRemoveLine(), POINT_BIT, g);
		//绘制值槽（经验值）
		int h=32;
		g.setColor(Color.BLACK);
		g.fillRect(this.x + PANDDING, this.y + expY, this.expW, h);
		g.setColor(Color.WHITE);
		g.fillRect(this.x + PANDDING + 1, this.y + expY + 1, this.expW - 2, h - 2);
		g.setColor(Color.BLACK);
		g.fillRect(this.x + PANDDING + 2, this.y + expY + 2, this.expW - 4, h - 4);
		g.setColor(Color.GREEN);
		g.fillRect(this.x + PANDDING + 2, this.y + expY + 2, 50, h - 4);
		//TODO 临时
		int rmLine = this.dto.getNowRemoveLine();
		int w = (int)(((double)(rmLine % LEVEL_UP)/(double)LEVEL_UP)*(this.expW - 4));
	}
}
